--[[ -----------------------------------
 #  База скриптов
 #  for Lost Path
 #  author : b4d1k
 #  date   : 11.02.2018
 #  file   : lostpath.script 
]]-- -----------------------------------

local string_isg = ""
local operations_isg = 0

local string_army = text
local operations_army = 0

local string_dolg = text
local operations_dolg = 0

local string_freedom = text
local operations_freedom = 0

local string_merc = text
local operations_merc = 0

local config = ini_file("rpg.ltx")

-- ---------------------------------------------------------------------------------
-- Играем звук в голове ГГ
function play_sound(snd)
	if snd then
		local snd_obj = sound_object(snd)
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
	end
end

-- ---------------------------------------------------------------------------------
-- Чтение actor переменной
function read_variable(params_name)
	return pstor_retrieve(db.actor, params_name)
end
-- ---------------------------------------------------------------------------------


-- ---------------------------------------------------------------------------------
-- Запись actor переменной
function write_variable(params_name, value)
	if not value then
		pstor_clear(db.actor, params_name)
	else
		pstor_store(db.actor, params_name, value)
	end
end
-- ---------------------------------------------------------------------------------


-- ---------------------------------------------------------------------------------
-- Инициализация actor переменной
function set_safe_variable(variable_name, val)
	if not read_variable(variable_name) then
		if not val then
			write_variable(variable_name, 0)
		else
			write_variable(variable_name, val)
		end
	end
end
-- ---------------------------------------------------------------------------------

-- ---------------------------------------------------------------------------------
-- Запоминаем механика, с которым говорили
function change_last_told_mechanick(first_speaker, second_speaker)
	mod_flags.last_told_mechanick = dialogs.who_is_npc(first_speaker, second_speaker)
end
-- ---------------------------------------------------------------------------------


-- ---------------------------------------------------------------------------------
-- Забираем бабки
function take_money_300(first_speaker, second_speaker)
    dialogs.relocate_money_to_actor(first_speaker, second_speaker, 300)
end
-- ---------------------------------------------------------------------------------

-- ---------------------------------------------------------------------------------
-- Проверка наличия предмета(item)
function actor_has_item(item)
	local actor = db.actor
    if actor:object(item) then
        return true
    end
    return false
end
-- ---------------------------------------------------------------------------------

-- ---------------------------------------------------------------------------------
-- Удаляем предмет из инвентаря
function remove_item_from_inventory(remove_item,npc)
  if npc == nil then npc = db.actor end
  if remove_item~=nil then
	alife():release(alife():object(remove_item:id()), true)
	return true
  end
  return false
end
-- ---------------------------------------------------------------------------------

-- ---------------------------------------------------------------------------------
-- Системные функции
function actor_on_item_use(item)
	local actor = db.actor
	local actor_faction = character_community(actor)
	
	if item:section() == 'drug_anabiotic'
	and surge_manager.is_started()
	and surge_manager.get_surge_manager().actor_in_cover then
	if level.name() == 'l08_yantar' 
	or level.name() == 'l10_radar' then
			if actor_faction == "actor_zombied"
			or actor_faction == "actor_monolith" then
				actor:set_character_community("actor_stalker", 0, 0)	-- сменить группировку на сталкера
				news_manager.send_tip(db.actor, "%c[0,255,64,0]The anabiotic was successfully administered.", nil, nil, nil, nil)
				xr_sound.set_sound_play(db.actor:id(), "pda_news")
				game_relations.set_community_goodwill_for_faction("actor_stalker")
			end
		end
	end
end

function on_item_drag_dropped(itm1,itm2,from_slot,to_slot)
	if (from_slot ~= EDDListType.iActorBag) then 
		return 
	end 
	
	if not (to_slot == EDDListType.iActorSlot or to_slot == EDDListType.iActorBag) then 
		return 
	end
	
	ActorMenu.get_actor_menu():refresh_current_cell_item()
	
	if itm1:section() == 'itm_servoprivod' then
		
		if db.actor:get_level_intellect() < 3 then
			ui_dyn_msg_box.msg_box_ui("message_box_ok",true,game.translate_string("Your knowledge is not enough to work with this subject."))
			return
		end
		
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		servoprivod_equip(itm2)
		released(itm1)
	elseif itm1:section() == 'itm_rem_serv' then
		
		if db.actor:get_level_intellect() < 3 then
			ui_dyn_msg_box.msg_box_ui("message_box_ok",true,game.translate_string("Your knowledge is not enough to work with this subject."))
			return
		end
		
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		servoprivod_drop(itm2)
		released(itm1)
	end 
	
	if itm1:section() == 'batteries_cell' and itm2:section() == "pda_nps_low" then
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		update_pda(itm1, itm2)
	end
	
	ActorMenu.get_actor_menu():refresh_current_cell_item()
end

function released(itm1)
	local sid = alife_object(itm1:id())
	if sid then
		alife():release(sid, true)
	end
	
	ActorMenu.get_actor_menu():refresh_current_cell_item()
end

function servoprivod_equip(itm2)	
	local arm_sec = itm2:section()
	if system_ini():r_string_ex(arm_sec,"can_serv","") == "installing" then
		if string.find(arm_sec, "radiation") then
			arm_new_sec = string.gsub(arm_sec, "radiation", "exo")
		elseif not string.find(arm_sec, "proto") then 
			arm_new_sec = arm_sec.."_proto"
		end
		
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		
		local function on_yes(owner,p)
			ActorMenu.get_actor_menu():refresh_current_cell_item()
			lostpath_montage.start(arm_sec, arm_new_sec, itm2)
			ActorMenu.get_actor_menu():refresh_current_cell_item()
		end
		
		local function on_no(owner,p)
			ActorMenu.get_actor_menu():refresh_current_cell_item()
			give_object_to_actor("itm_servoprivod")
			ActorMenu.get_actor_menu():refresh_current_cell_item()
		end
		
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		local msg = strformat(game.translate_string("st_serv_install"))
		ui_dyn_msg_box.msg_box_ui("message_box_yes_no",true,msg,on_yes,on_no)		
		ActorMenu.get_actor_menu():refresh_current_cell_item()
	elseif not (system_ini():r_string_ex(arm_sec,"can_serv","") == "installing") then
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		ui_dyn_msg_box.msg_box_ui("message_box_ok",true,game.translate_string("st_serv_noinstall"))
		give_object_to_actor("itm_servoprivod")
		return
	end
end

function servoprivod_drop(itm2)
	local arm_sec = itm2:section()
	if system_ini():r_string_ex(arm_sec,"can_serv","") == "installed" then
		if string.find(arm_sec, "proto") then 
			arm_new_sec = string.gsub(arm_sec, "_proto", "")
		elseif string.find(arm_sec, "exo") then
			arm_new_sec = string.gsub(arm_sec, "exo", "radiation")
		end
		
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		
		local function on_yes(owner,p)
			ActorMenu.get_actor_menu():refresh_current_cell_item()
			lostpath_demontage.start(arm_sec, arm_new_sec, itm2)
			ActorMenu.get_actor_menu():refresh_current_cell_item()
		end
		
		local function on_no(owner,p)
			ActorMenu.get_actor_menu():refresh_current_cell_item()
			give_object_to_actor("itm_rem_serv")
			ActorMenu.get_actor_menu():refresh_current_cell_item()
		end
		
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		local msg = strformat(game.translate_string("st_serv_reinstall"))
		ui_dyn_msg_box.msg_box_ui("message_box_yes_no",true,msg,on_yes,on_no)
		ActorMenu.get_actor_menu():refresh_current_cell_item()	
	else
		ActorMenu.get_actor_menu():refresh_current_cell_item()
		ui_dyn_msg_box.msg_box_ui("message_box_ok",true,game.translate_string("st_serv_noreinstall"))
		give_object_to_actor("itm_rem_serv")
		return
	end
end

function refresh()
	ActorMenu.get_actor_menu():refresh_current_cell_item()
end

function update_pda(itm1, itm2)
	local energy = itm1
	local luck_bonus = config:r_float_ex("luck_bonus", db.actor:get_level_luck())
	
	ActorMenu.get_actor_menu():refresh_current_cell_item()
	
	if energy and energy:condition() < 0.1 then
		ui_dyn_msg_box.msg_box_ui("message_box_ok",true,game.translate_string("st_noenergy"))
		return
	end
	
	local function on_yes(owner,p)
		if (math.random(0, 100) + luck_bonus >= 75) then 
			give_object_to_actor("pda_nps_good",1)
			released(itm2)
			sim_relations.send_news("Success!", "This PDA is charged and usable.", "ui_inGame2_D_gonets_pravosudiya")
		else
			sim_relations.send_news("Failure.", "Could not charge.", "ui_inGame2_Radiopomehi")
		end
		energy:set_condition(energy:condition() - 0.1)
	end
	
	local function on_no(owner,p)
		refresh()
	end
	
	local msg = strformat(game.translate_string("st_charging_pda"))
	ui_dyn_msg_box.msg_box_ui("message_box_yes_no",true,msg,on_yes,on_no)
	refresh()
end

function on_game_start()
	CreateTimeEvent('rpg','update', 0.5, lostpath_rpg_system.update_rpg)
	CreateTimeEvent('scripts','name', 1, lostpath_name.update)
	--CreateTimeEvent('magma','update', 1, lostpath_magma.update)
	--CreateTimeEvent('magma','ammo', 120, lostpath_magma.ammo)
	--CreateTimeEvent('faction','res', 10, lostpath_faction_resource.update)
	CreateTimeEvent('faction','kick', 5, lostpath_faction_change.update)
	
	if level.name() == "l08_yantar" then
		CreateTimeEvent('zombie','update', 54000, lostpath_zombie.update)		
	end
	
	RegisterScriptCallback("on_game_load",on_game_load)
	RegisterScriptCallback("actor_on_item_use",actor_on_item_use)
	RegisterScriptCallback("CUIActorMenu_OnItemDropped",on_item_drag_dropped)
end

-- вызывается биндером, а не отсюда
function actor_on_before_death()
	actor_die.respawn()
end

function on_game_load()
	
	local con = get_console()
	local config = ini_file_ex("axr_options.ltx",true)
	local enable = config:r_value("mm_options","enable_hardcore_ai_aim",1)
	
	if enable then
		con:execute("ai_aim_max_angle 31.0")
		con:execute("ai_aim_min_angle 25.0")
		con:execute("ai_aim_min_speed 2.50")
		con:execute("ai_aim_predict_time 0.08")
	else
		con:execute("ai_aim_max_angle 31.0")
		con:execute("ai_aim_min_angle 10.0")
		con:execute("ai_aim_min_speed 4.0")
		con:execute("ai_aim_predict_time 1.00")
	end
	
	con:execute("g_god off")
	
	local function release_actor_item(temp, item)
		local se_item = alife():object(item:id())
		if (se_item) then
			local sec = se_item:section_name()
			--printf("%s", sec)
		end
	end
	db.actor:iterate_inventory(release_actor_item,nil)
end